// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.7.1
// source: lobby.proto

package msg

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Result int32

const (
	Result_REGISTER_SUCCESS Result = 0
	Result_REGISTER_FAIL    Result = 1
	Result_LOGIN_SUCCESS    Result = 2
	Result_LOGIN_FAIL       Result = 3
)

// Enum value maps for Result.
var (
	Result_name = map[int32]string{
		0: "REGISTER_SUCCESS",
		1: "REGISTER_FAIL",
		2: "LOGIN_SUCCESS",
		3: "LOGIN_FAIL",
	}
	Result_value = map[string]int32{
		"REGISTER_SUCCESS": 0,
		"REGISTER_FAIL":    1,
		"LOGIN_SUCCESS":    2,
		"LOGIN_FAIL":       3,
	}
)

func (x Result) Enum() *Result {
	p := new(Result)
	*p = x
	return p
}

func (x Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Result) Descriptor() protoreflect.EnumDescriptor {
	return file_lobby_proto_enumTypes[0].Descriptor()
}

func (Result) Type() protoreflect.EnumType {
	return &file_lobby_proto_enumTypes[0]
}

func (x Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Result.Descriptor instead.
func (Result) EnumDescriptor() ([]byte, []int) {
	return file_lobby_proto_rawDescGZIP(), []int{0}
}

type Test struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Test string `protobuf:"bytes,2,opt,name=Test,proto3" json:"Test,omitempty"`
}

func (x *Test) Reset() {
	*x = Test{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lobby_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Test) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Test) ProtoMessage() {}

func (x *Test) ProtoReflect() protoreflect.Message {
	mi := &file_lobby_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Test.ProtoReflect.Descriptor instead.
func (*Test) Descriptor() ([]byte, []int) {
	return file_lobby_proto_rawDescGZIP(), []int{0}
}

func (x *Test) GetTest() string {
	if x != nil {
		return x.Test
	}
	return ""
}

// 用户登陆协议
type UserLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoginName string `protobuf:"bytes,1,opt,name=LoginName,proto3" json:"LoginName,omitempty"` // 用户名
	LoginPW   string `protobuf:"bytes,2,opt,name=LoginPW,proto3" json:"LoginPW,omitempty"`     // 密码
}

func (x *UserLogin) Reset() {
	*x = UserLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lobby_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLogin) ProtoMessage() {}

func (x *UserLogin) ProtoReflect() protoreflect.Message {
	mi := &file_lobby_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLogin.ProtoReflect.Descriptor instead.
func (*UserLogin) Descriptor() ([]byte, []int) {
	return file_lobby_proto_rawDescGZIP(), []int{1}
}

func (x *UserLogin) GetLoginName() string {
	if x != nil {
		return x.LoginName
	}
	return ""
}

func (x *UserLogin) GetLoginPW() string {
	if x != nil {
		return x.LoginPW
	}
	return ""
}

// 注册协议
type UserRegister struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoginName string `protobuf:"bytes,1,opt,name=LoginName,proto3" json:"LoginName,omitempty"` // 用户名
	LoginPW   string `protobuf:"bytes,2,opt,name=LoginPW,proto3" json:"LoginPW,omitempty"`     // 密码
}

func (x *UserRegister) Reset() {
	*x = UserRegister{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lobby_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRegister) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRegister) ProtoMessage() {}

func (x *UserRegister) ProtoReflect() protoreflect.Message {
	mi := &file_lobby_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRegister.ProtoReflect.Descriptor instead.
func (*UserRegister) Descriptor() ([]byte, []int) {
	return file_lobby_proto_rawDescGZIP(), []int{2}
}

func (x *UserRegister) GetLoginName() string {
	if x != nil {
		return x.LoginName
	}
	return ""
}

func (x *UserRegister) GetLoginPW() string {
	if x != nil {
		return x.LoginPW
	}
	return ""
}

// 消息返回协议
type UserResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetResult Result `protobuf:"varint,1,opt,name=RetResult,proto3,enum=msg.Result" json:"RetResult,omitempty"`
	ErrorInfo string `protobuf:"bytes,2,opt,name=ErrorInfo,proto3" json:"ErrorInfo,omitempty"`
}

func (x *UserResult) Reset() {
	*x = UserResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lobby_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserResult) ProtoMessage() {}

func (x *UserResult) ProtoReflect() protoreflect.Message {
	mi := &file_lobby_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserResult.ProtoReflect.Descriptor instead.
func (*UserResult) Descriptor() ([]byte, []int) {
	return file_lobby_proto_rawDescGZIP(), []int{3}
}

func (x *UserResult) GetRetResult() Result {
	if x != nil {
		return x.RetResult
	}
	return Result_REGISTER_SUCCESS
}

func (x *UserResult) GetErrorInfo() string {
	if x != nil {
		return x.ErrorInfo
	}
	return ""
}

// 玩家有角色的情况
type UserST struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID      string `protobuf:"bytes,1,opt,name=UID,proto3" json:"UID,omitempty"`           // 账号ID
	ServerID string `protobuf:"bytes,2,opt,name=ServerID,proto3" json:"ServerID,omitempty"` // 服务器ID
	RoleUID  string `protobuf:"bytes,3,opt,name=RoleUID,proto3" json:"RoleUID,omitempty"`   // 角色UID
	RoleName string `protobuf:"bytes,4,opt,name=RoleName,proto3" json:"RoleName,omitempty"` // 角色名字
	RoleLev  string `protobuf:"bytes,5,opt,name=RoleLev,proto3" json:"RoleLev,omitempty"`   // 角色等级
	Coin     string `protobuf:"bytes,6,opt,name=Coin,proto3" json:"Coin,omitempty"`         // 金币
}

func (x *UserST) Reset() {
	*x = UserST{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lobby_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserST) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserST) ProtoMessage() {}

func (x *UserST) ProtoReflect() protoreflect.Message {
	mi := &file_lobby_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserST.ProtoReflect.Descriptor instead.
func (*UserST) Descriptor() ([]byte, []int) {
	return file_lobby_proto_rawDescGZIP(), []int{4}
}

func (x *UserST) GetUID() string {
	if x != nil {
		return x.UID
	}
	return ""
}

func (x *UserST) GetServerID() string {
	if x != nil {
		return x.ServerID
	}
	return ""
}

func (x *UserST) GetRoleUID() string {
	if x != nil {
		return x.RoleUID
	}
	return ""
}

func (x *UserST) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *UserST) GetRoleLev() string {
	if x != nil {
		return x.RoleLev
	}
	return ""
}

func (x *UserST) GetCoin() string {
	if x != nil {
		return x.Coin
	}
	return ""
}

// 基础用户信息id头像昵称
type UserBaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      string `protobuf:"bytes,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	NickName string `protobuf:"bytes,2,opt,name=NickName,proto3" json:"NickName,omitempty"`
	Avatar   string `protobuf:"bytes,3,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
}

func (x *UserBaseInfo) Reset() {
	*x = UserBaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lobby_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBaseInfo) ProtoMessage() {}

func (x *UserBaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_lobby_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBaseInfo.ProtoReflect.Descriptor instead.
func (*UserBaseInfo) Descriptor() ([]byte, []int) {
	return file_lobby_proto_rawDescGZIP(), []int{5}
}

func (x *UserBaseInfo) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *UserBaseInfo) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *UserBaseInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

// 消息体
// 如 type=text  ContentJson={text:"你好"}
// 如 type=image  ContentJson={image:"xxx.png",height:100,width:100}
// 因为不同的type,ContentJson的结构不同，所以为字符串类型
type ChatMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        string `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty"`
	ContentJson string `protobuf:"bytes,2,opt,name=ContentJson,proto3" json:"ContentJson,omitempty"`
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lobby_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_lobby_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_lobby_proto_rawDescGZIP(), []int{6}
}

func (x *ChatMessage) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ChatMessage) GetContentJson() string {
	if x != nil {
		return x.ContentJson
	}
	return ""
}

// 消息发送
type ChatREQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *ChatMessage `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	ToId    uint32       `protobuf:"varint,2,opt,name=ToId,proto3" json:"ToId,omitempty"`
	ToType  string       `protobuf:"bytes,3,opt,name=ToType,proto3" json:"ToType,omitempty"`
}

func (x *ChatREQ) Reset() {
	*x = ChatREQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lobby_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatREQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatREQ) ProtoMessage() {}

func (x *ChatREQ) ProtoReflect() protoreflect.Message {
	mi := &file_lobby_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatREQ.ProtoReflect.Descriptor instead.
func (*ChatREQ) Descriptor() ([]byte, []int) {
	return file_lobby_proto_rawDescGZIP(), []int{7}
}

func (x *ChatREQ) GetMessage() *ChatMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ChatREQ) GetToId() uint32 {
	if x != nil {
		return x.ToId
	}
	return 0
}

func (x *ChatREQ) GetToType() string {
	if x != nil {
		return x.ToType
	}
	return ""
}

// 消息送达
type ChatACK struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From    *UserBaseInfo `protobuf:"bytes,1,opt,name=From,proto3" json:"From,omitempty"`
	Message *ChatMessage  `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	ToId    uint32        `protobuf:"varint,3,opt,name=ToId,proto3" json:"ToId,omitempty"`
	ToType  string        `protobuf:"bytes,4,opt,name=ToType,proto3" json:"ToType,omitempty"`
}

func (x *ChatACK) Reset() {
	*x = ChatACK{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lobby_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatACK) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatACK) ProtoMessage() {}

func (x *ChatACK) ProtoReflect() protoreflect.Message {
	mi := &file_lobby_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatACK.ProtoReflect.Descriptor instead.
func (*ChatACK) Descriptor() ([]byte, []int) {
	return file_lobby_proto_rawDescGZIP(), []int{8}
}

func (x *ChatACK) GetFrom() *UserBaseInfo {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ChatACK) GetMessage() *ChatMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ChatACK) GetToId() uint32 {
	if x != nil {
		return x.ToId
	}
	return 0
}

func (x *ChatACK) GetToType() string {
	if x != nil {
		return x.ToType
	}
	return ""
}

var File_lobby_proto protoreflect.FileDescriptor

var file_lobby_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0x1a, 0x0a, 0x04, 0x54, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x65,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x65, 0x73, 0x74, 0x22, 0x43,
	0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x50, 0x57, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x50, 0x57, 0x22, 0x46, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x57, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x57, 0x22, 0x55, 0x0a, 0x0a, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x29, 0x0a, 0x09, 0x52, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x09, 0x52, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x9a, 0x01, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x53, 0x54, 0x12, 0x10, 0x0a,
	0x03, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x52,
	0x6f, 0x6c, 0x65, 0x55, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x52, 0x6f,
	0x6c, 0x65, 0x55, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x43,
	0x6f, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x69, 0x6e, 0x22,
	0x54, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0x43, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x22, 0x61, 0x0a, 0x07, 0x43, 0x68,
	0x61, 0x74, 0x52, 0x45, 0x51, 0x12, 0x2a, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x68, 0x61,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x6f, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x54, 0x6f, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x22, 0x88, 0x01,
	0x0a, 0x07, 0x43, 0x68, 0x61, 0x74, 0x41, 0x43, 0x4b, 0x12, 0x25, 0x0a, 0x04, 0x46, 0x72, 0x6f,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d,
	0x12, 0x2a, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x54, 0x6f, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x54, 0x6f, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x54, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x54, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x2a, 0x54, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x53,
	0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x52, 0x45, 0x47, 0x49,
	0x53, 0x54, 0x45, 0x52, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x4c,
	0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x0e,
	0x0a, 0x0a, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x03, 0x42, 0x08,
	0x5a, 0x06, 0x2e, 0x2f, 0x3b, 0x6d, 0x73, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lobby_proto_rawDescOnce sync.Once
	file_lobby_proto_rawDescData = file_lobby_proto_rawDesc
)

func file_lobby_proto_rawDescGZIP() []byte {
	file_lobby_proto_rawDescOnce.Do(func() {
		file_lobby_proto_rawDescData = protoimpl.X.CompressGZIP(file_lobby_proto_rawDescData)
	})
	return file_lobby_proto_rawDescData
}

var file_lobby_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_lobby_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_lobby_proto_goTypes = []interface{}{
	(Result)(0),          // 0: msg.Result
	(*Test)(nil),         // 1: msg.Test
	(*UserLogin)(nil),    // 2: msg.UserLogin
	(*UserRegister)(nil), // 3: msg.UserRegister
	(*UserResult)(nil),   // 4: msg.UserResult
	(*UserST)(nil),       // 5: msg.UserST
	(*UserBaseInfo)(nil), // 6: msg.UserBaseInfo
	(*ChatMessage)(nil),  // 7: msg.ChatMessage
	(*ChatREQ)(nil),      // 8: msg.ChatREQ
	(*ChatACK)(nil),      // 9: msg.ChatACK
}
var file_lobby_proto_depIdxs = []int32{
	0, // 0: msg.UserResult.RetResult:type_name -> msg.Result
	7, // 1: msg.ChatREQ.Message:type_name -> msg.ChatMessage
	6, // 2: msg.ChatACK.From:type_name -> msg.UserBaseInfo
	7, // 3: msg.ChatACK.Message:type_name -> msg.ChatMessage
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_lobby_proto_init() }
func file_lobby_proto_init() {
	if File_lobby_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_lobby_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Test); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lobby_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lobby_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRegister); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lobby_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lobby_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserST); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lobby_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lobby_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lobby_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatREQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lobby_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatACK); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lobby_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_lobby_proto_goTypes,
		DependencyIndexes: file_lobby_proto_depIdxs,
		EnumInfos:         file_lobby_proto_enumTypes,
		MessageInfos:      file_lobby_proto_msgTypes,
	}.Build()
	File_lobby_proto = out.File
	file_lobby_proto_rawDesc = nil
	file_lobby_proto_goTypes = nil
	file_lobby_proto_depIdxs = nil
}
